{
  "enableDifficultyScaling": {
    "comments": [
      "Disable/Enables the whole difficulty scaling of this mod. Requires a mc restart"
    ],
    "input": true
  },
  "difficultyDelay": {
    "comments": [
      "Time in ticks for which the difficulty shouldnt increase at the beginning. One full minecraft day is 24000 ticks"
    ],
    "input": 0
  },
  "increaseHandler": {
    "comments": [
      "Handles increase in difficulty regarding current difficulty.",
      "Format is <minimum current difficulty>-<increase every 2400 ticks>",
      "Example [\"0-0.01\",\"10-0.1\",\"30-0\"]",
      "So the difficulty increases by 0.01 every 2400 ticks (->0.1 per mc day) till it reaches a difficulty of 10.",
      "Then it increases by 1 per mc day till it reaches 30 and then stops."
    ],
    "input": [
      "0-0.1, 250-0"
    ]
  },
  "ignorePlayers": {
    "comments": [
      "Wether difficulty should only increase with at least one online players or not"
    ],
    "input": false
  },
  "shouldPunishTimeSkip": {
    "comments": [
      "Should punish time skipping with e.g. bed, commands? If false, difficulty will increase by 0.1 regardless of skipped time."
    ],
    "input": true
  },
  "friendlyFire": {
    "comments": [
      "Disable/Enable friendly fire for owned pets."
    ],
    "input": false
  },
  "petArmorBlackList": {
    "comments": [
      "Blacklist for pet you should't be able to give armor to. Pets from mods, which have custom armor should be included here."
    ],
    "input": []
  },
  "petWhiteList": {
    "comments": [
      "Treat pet blacklist as whitelist"
    ],
    "input": false
  },
  "doIMDifficulty": {
    "comments": [
      "Increase difficulty with time",
      "Here untill its back as a gamerule"
    ],
    "input": true
  },
  "difficultyType": {
    "comments": [
      "How the difficulty at a position is calculated. Supported values are: ",
      "GLOBAL: Serverwide difficulty value",
      "PLAYERMAX: Maximum difficulty of players in a 128 radius around the position",
      "PLAYERMEAN: Average difficulty of players in a 128 radius around the position"
    ],
    "input": "GLOBAL"
  },
  "flagBlacklist": {
    "comments": [
      "Put the above flags here to completly disable them."
    ],
    "input": []
  },
  "entityBlacklist": {
    "comments": [
      "Entities added here will be blacklisted from their assigned flags. Usage:",
      "<entity registry name> or <namespace> followed by any of:",
      "[ALL,ATTRIBUTES,ARMOR,HELDITEMS,BLOCKBREAK,USEITEM,LADDER,STEAL,GUARDIAN,PARROT,TARGETVILLAGER,NEUTRALAGGRO,REVERSE].",
      "Having no flags is equal to ALL. Use REVERSE to reverse all flags. Some flags do nothing for certain mobs!",
      "Examples:",
      "minecraft:sheep is equal to minecraft:sheep|ALL and excludes sheeps from all modifications",
      "minecraft:sheep|REVERSE|ATTRIBUTES will add sheep to attributes modification only",
      "minecraft:sheep|ATTRIBUTES will add sheep to everything except attributes"
    ],
    "input": [
      "mcdar:golem_kit_golem",
      "mythicmounts:geckotoalizard",
      "earthtojavamobs:fancy_chicken",
      "twm:firefly",
      "minecraft:glow_squid",
      "adventurez:the_eye",
      "minecraft:trader_llama",
      "mythicmounts:netherbat",
      "the_aether:moa",
      "earthtojavamobs:cream_cow",
      "llamarama:mossy_llama",
      "bosses_of_mass_destruction:lich",
      "earthtojavamobs:pinto_cow",
      "earthtojavamobs:moolip",
      "goblintraders:goblin_trader",
      "minecraft:horse",
      "betterend:silk_moth",
      "betternether:naga_projectile",
      "minecraft:polar_bear",
      "adventurez:mammoth",
      "earthtojavamobs:sunset_cow",
      "the_aether:rook",
      "minecraft:llama",
      "minecraft:pig",
      "earthtojavamobs:long_nosed_sheep",
      "direbats:direbat",
      "minecraft:turtle",
      "minecraft:sheep",
      "mythicmounts:griffon",
      "bosses_of_mass_destruction:gauntlet",
      "the_aether:aechor_plant",
      "bosses_of_mass_destruction:obsidilith",
      "earthtojavamobs:vested_rabbit",
      "aqupd:grizzly_bear",
      "earthtojavamobs:dairy_cow",
      "minecraft:goat",
      "minecraft:dolphin",
      "adventurez:brown_fungus",
      "sculk_worm:sculk_worm_entity",
      "minecraft:cod",
      "adventurez:deer",
      "minecraft:donkey",
      "earthtojavamobs:wooly_cow",
      "the_aether:aerwhale",
      "earthtojavamobs:harelequin_rabbit",
      "earthtojavamobs:midnight_chicken",
      "llamarama:caravan_trader",
      "minecraft:squid",
      "earthtojavamobs:furnace_golem",
      "minecraft:skeleton_horse",
      "earthtojavamobs:cookie_cow",
      "minecraft:cow",
      "earthtojavamobs:fuzzy_sheep",
      "earthtojavamobs:jumbo_rabbit",
      "minecraft:bee",
      "mythicmounts:courierbird",
      "goblintraders:vein_goblin_trader",
      "earthtojavamobs:moobloom",
      "minecraft:salmon",
      "mythicmounts:archelon",
      "bosses_of_mass_destruction:void_blossom",
      "earthtojavamobs:stormy_chicken",
      "mythicmounts:moth",
      "minecraft:snow_golem",
      "earthtojavamobs:bronzed_chicken",
      "minecraft:mooshroom",
      "betterend:end_fish",
      "mcdar:buzzy_nest_bee",
      "minecraft:villager",
      "earthtojavamobs:spotted_pig",
      "earthtojavamobs:rainbow_sheep",
      "megaparrot:megaparrot",
      "minecraft:rabbit",
      "earthtojavamobs:pale_pig",
      "minecraft:axolotl",
      "betterend:cubozoa",
      "botania:doppleganger",
      "endgoblintraders:end_goblin_trader",
      "earthtojavamobs:patched_sheep",
      "edenring:diskwing",
      "oxidized:copper_golem",
      "mythicmounts:nudibranch",
      "earthtojavamobs:bold_striped_rabbit",
      "earthtojavamobs:gold_crested_chicken",
      "mythicmounts:nightmare",
      "llamarama:woolly_llama",
      "minecraft:strider",
      "earthtojavamobs:piebald_pig",
      "minecraft:parrot",
      "betternether:flying_pig",
      "mythicmounts:direwolf",
      "earthtojavamobs:cluckshroom",
      "mcdar:enchanted_red_sheep",
      "earthtojavamobs:pink_footed_pig",
      "llamarama:bumble_llama",
      "minecraft:bat",
      "minecraft:wandering_trader",
      "earthtojavamobs:freckled_rabbit",
      "minecraft:iron_golem",
      "earthtojavamobs:mottled_pig",
      "mythicmounts:acencia",
      "earthtojavamobs:jolly_llama",
      "adventurez:dragon",
      "mythicmounts:ridinglizard",
      "earthtojavamobs:rocky_sheep",
      "botania:pixie",
      "adventurez:red_fungus",
      "the_aether:aerbunny",
      "mcdw:summoned_bee",
      "dummmmmmy:target_dummy",
      "twm:frog",
      "mcdar:enchanted_green_sheep",
      "promenade:duck",
      "betternether:hydrogen_jellyfish",
      "sculk_worm:sculk_segment_entity",
      "earthtojavamobs:albino_cow",
      "minecraft:mule",
      "betterend:dragonfly",
      "earthtojavamobs:melon_golem",
      "earthtojavamobs:inky_sheep",
      "adventurez:nightmare",
      "adventurez:ender_whale",
      "mcdar:enchanted_blue_sheep",
      "minecraft:zombie_horse",
      "mythicmounts:dragon",
      "mcdar:wonderful_wheat_llama",
      "earthtojavamobs:glow_squid",
      "earthtojavamobs:amber_chicken",
      "minecraft:cat",
      "minecraft:pufferfish",
      "earthtojavamobs:umbra_cow",
      "adventurez:iguana",
      "twm:tadpole",
      "earthtojavamobs:ashen_cow",
      "earthtojavamobs:muddy_pig",
      "minecraft:fox",
      "earthtojavamobs:sooty_pig",
      "mcdar:tasty_bone_wolf",
      "minecraft:tropical_fish",
      "earthtojavamobs:muddy_foot_rabbit",
      "earthtojavamobs:flecked_sheep",
      "minecraft:ocelot",
      "the_bumblezone:beehemoth",
      "minecraft:chicken",
      "betternether:firefly",
      "mcda:summoned_bee",
      "minecraft:wolf",
      "minecraft:panda",
      "earthtojavamobs:skewbald_chicken",
      "earthtojavamobs:horned_sheep"
    ]
  },
  "mobAttributeWhitelist": {
    "comments": [
      "Treat ATTRIBUTES flags as whitelist"
    ],
    "input": false
  },
  "armorMobWhitelist": {
    "comments": [
      "Treat ARMOR flags as whitelist"
    ],
    "input": false
  },
  "heldMobWhitelist": {
    "comments": [
      "Treat HELDITEMS flags as whitelist"
    ],
    "input": false
  },
  "mobListBreakWhitelist": {
    "comments": [
      "Treat BLOCKBREAK flags as whitelist"
    ],
    "input": false
  },
  "mobListUseWhitelist": {
    "comments": [
      "Treat USEITEM flags as whitelist"
    ],
    "input": false
  },
  "mobListLadderWhitelist": {
    "comments": [
      "Treat LADDER flags as whitelist"
    ],
    "input": false
  },
  "mobListStealWhitelist": {
    "comments": [
      "Treat STEAL flags as whitelist"
    ],
    "input": false
  },
  "mobListBoatWhitelist": {
    "comments": [
      "Treat GUARDIAN flags as whitelist"
    ],
    "input": false
  },
  "mobListFlyWhitelist": {
    "comments": [
      "Treat PARROT flags as whitelist"
    ],
    "input": false
  },
  "targetVillagerWhitelist": {
    "comments": [
      "Treat TARGETVILLAGER flags as whitelist"
    ],
    "input": false
  },
  "neutralAggroWhitelist": {
    "comments": [
      "Treat NEUTRALAGGRO flags as whitelist"
    ],
    "input": false
  },
  "debugPath": {
    "comments": [
      "Enable showing of entity paths"
    ],
    "input": false
  },
  "useScalingHealthMod": {
    "comments": [
      "Should the scaling health mods difficulty system be used instead of this ones. (Requires scaling health mod)"
    ],
    "input": true
  },
  "breakableBlocks": {
    "comments": [
      "Whitelist for blocks, which can be actively broken.",
      "Usage: <registry name;classname;tag;namespace> put \"!\" infront to exclude blocks",
      "Note: If you include common blocks (like grass blocks) the pathfinding will be a bit strange"
    ],
    "input": [
      "minecraft:fence_gates",
      "minecraft:wooden_doors",
      "c:glass",
      "c:glass_panes",
      "minecraft:glass"
    ]
  },
  "breakingAsBlacklist": {
    "comments": [
      "Treat Block Whitelist as Blocklist"
    ],
    "input": false
  },
  "useBlockBreakSound": {
    "comments": [
      "Use the block breaking sound instead of a knocking sound"
    ],
    "input": false
  },
  "breakerChance": {
    "comments": [
      "Chance for a mob to be able to break blocks"
    ],
    "input": 0.3
  },
  "breakerInitCooldown": {
    "comments": [
      "Initial cooldown for block breaking mobs"
    ],
    "input": 120
  },
  "breakerCooldown": {
    "comments": [
      "Cooldown for breaking blocks"
    ],
    "input": 20
  },
  "stealerChance": {
    "comments": [
      "Chance for a mob to be able to steal items"
    ],
    "input": 0.3
  },
  "breakTileEntities": {
    "comments": [
      "Should mobs be able to break tile entities? Evaluated before the break list"
    ],
    "input": true
  },
  "breakingItems": {
    "comments": [
      "Items which will be given to mobs who can break blocks. Empty list = no items. Syntax: id;weight"
    ],
    "input": [
      "minecraft:diamond_pickaxe;1",
      "minecraft:iron_axe;2"
    ]
  },
  "neutralAggressiv": {
    "comments": [
      "Chance for neutral mobs to be aggressive"
    ],
    "input": 0.2
  },
  "autoTargets": {
    "comments": [
      "List for of pairs containing which mobs auto target others. Syntax is [mob id]-[mob id] where second value is the target.",
      " e.g. minecraft:zombie-minecraft:skeleton makes all zombies target skeletons"
    ],
    "input": []
  },
  "difficultyBreak": {
    "comments": [
      "Difficulty at which mobs are able to break blocks"
    ],
    "input": 0.0
  },
  "difficultySteal": {
    "comments": [
      "Difficulty at which mobs are able to steal items"
    ],
    "input": 0.0
  },
  "flyAIChance": {
    "comments": [
      "Chance for mobs to be able to ride a parrot"
    ],
    "input": 0.5
  },
  "equipmentModBlacklist": {
    "comments": [
      "Blacklist for mods. Add modid to prevent items from that mod being equipped. (For individual items use the equipment.json)"
    ],
    "input": []
  },
  "equipmentModWhitelist": {
    "comments": [
      "Use blacklist as whitelist"
    ],
    "input": false
  },
  "itemuseBlacklist": {
    "comments": [
      "Blacklist for items mobs should never be able to use.",
      "Use as in using the item similar to players (e.g. shooting bows)"
    ],
    "input": [
      "bigbrain:buckler"
    ]
  },
  "itemuseWhitelist": {
    "comments": [
      "Turn the use blacklist into a whitelist"
    ],
    "input": false
  },
  "entityItemConfig": {
    "comments": [
      "Blacklist for specific mobs and items they shouldnt use (e.g. skeletons already use bows)",
      "<entity registry name-item>",
      "For different items but same entity use multiple lines",
      "Some special names are BOW, TRIDEN, CROSSBOW refering to every bow/trident/crossbow item (So you dont need to type e.g. every bow item)"
    ],
    "input": [
      "minecraft:drowned;TRIDENT",
      "minecraft:illusioner;BOW",
      "minecraft:piglin;CROSSBOW",
      "minecraft:pillager;CROSSBOW",
      "minecraft:skeleton;BOW",
      "minecraft:snow_golem;minecraft:snowball",
      "minecraft:stray;BOW",
      "minecraft:wither_skeleton;BOW"
    ]
  },
  "baseEquipChance": {
    "comments": [
      "Base chance that a mob can have one piece of armor"
    ],
    "input": 0.1
  },
  "baseEquipChanceAdd": {
    "comments": [
      "Base chance for each additional armor pieces"
    ],
    "input": 0.3
  },
  "diffEquipAdd": {
    "comments": [
      "Adds additional x*difficulty% to base equip chance"
    ],
    "input": 0.3
  },
  "baseWeaponChance": {
    "comments": [
      "Chance for mobs to have a weapon"
    ],
    "input": 0.05
  },
  "diffWeaponChance": {
    "comments": [
      "Adds additional x*difficulty% to base weapon chance"
    ],
    "input": 0.3
  },
  "baseEnchantChance": {
    "comments": [
      "Base chance for each armor pieces to get enchanted"
    ],
    "input": 0.2
  },
  "diffEnchantAdd": {
    "comments": [
      "Adds additional x*difficulty% to base enchanting chance"
    ],
    "input": 0.2
  },
  "enchantCalc": {
    "comments": [
      "Specify min and max enchanting levels according to difficulty. difficulty-minLevel-maxLevel"
    ],
    "input": [
      "0-5-10",
      "25-5-15",
      "50-10-17",
      "100-15-25",
      "200-20-30",
      "250-30-35"
    ]
  },
  "baseItemChance": {
    "comments": [
      "Chance for mobs to have an item in offhand"
    ],
    "input": 0.05
  },
  "diffItemChanceAdd": {
    "comments": [
      "Adds additional x*difficulty% to base item chance"
    ],
    "input": 0.2
  },
  "shouldDropEquip": {
    "comments": [
      "Should mobs drop the armor equipped through this mod? (Other methods e.g. through vanilla is not included)"
    ],
    "input": false
  },
  "healthIncrease": {
    "comments": [
      "Health will be multiplied by difficulty*0.016*x. Set to 0 to disable"
    ],
    "input": 1.0
  },
  "healthMax": {
    "comments": [
      "Health will be multiplied by at maximum this. Set to 0 means no limit"
    ],
    "input": 5.0
  },
  "roundHP": {
    "comments": [
      "Round health to the nearest x. Set to 0 to disable"
    ],
    "input": 0.5
  },
  "damageIncrease": {
    "comments": [
      "Damage will be multiplied by difficulty*0.008*x. Set to 0 to disable"
    ],
    "input": 1.0
  },
  "damageMax": {
    "comments": [
      "Damage will be multiplied by at maximum this. Set to 0 means no limit"
    ],
    "input": 3.0
  },
  "speedIncrease": {
    "comments": [
      "Speed will be increased by difficulty*0.0008*x. Set to 0 to disable"
    ],
    "input": 1.0
  },
  "speedMax": {
    "comments": [
      "Maximum increase in speed"
    ],
    "input": 0.1
  },
  "knockbackIncrease": {
    "comments": [
      "Knockback will be increased by difficulty*0.002*x. Set to 0 to disable"
    ],
    "input": 1.0
  },
  "knockbackMax": {
    "comments": [
      "Maximum increase in knockback"
    ],
    "input": 0.5
  },
  "magicResIncrease": {
    "comments": [
      "Magic resistance will be increased by difficulty*0.0016*x. Set to 0 to disable"
    ],
    "input": 1.0
  },
  "magicResMax": {
    "comments": [
      "Maximum increase in magic resistance. Magic reduction is percentage"
    ],
    "input": 0.4
  },
  "projectileIncrease": {
    "comments": [
      "Projectile Damage will be multiplied by 1+difficulty*0.008*x. Set to 0 to disable"
    ],
    "input": 1.0
  },
  "projectileMax": {
    "comments": [
      "Projectile damage will be multiplied by maximum of this"
    ],
    "input": 2.0
  }
}